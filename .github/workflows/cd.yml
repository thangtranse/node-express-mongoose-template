name: Deploy Action

on:
  push:
    branches:
      - production

jobs:
  install-deps:
    name: Install dependencies
    runs-on: self-hosted
    timeout-minutes: 15
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/checkout@v4
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo name=dir::$(yarn cache dir) >> GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.name }}
            node_modules
            */*/node_modules
            .cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --production=false

  build:
    name: Build
    runs-on: self-hosted
    timeout-minutes: 15
    needs: install-deps

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/checkout@v4
      - name: Build
        run: |
          yarn build
